// Code generated by entc, DO NOT EDIT.

package session

import (
	"time"
)

const (
	// Label holds the string label denoting the session type in the database.
	Label = "session"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAudio holds the string denoting the audio field in the database.
	FieldAudio = "audio"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// EdgeSegments holds the string denoting the segments edge name in mutations.
	EdgeSegments = "segments"
	// Table holds the table name of the session in the database.
	Table = "sessions"
	// SegmentsTable is the table that holds the segments relation/edge.
	SegmentsTable = "segments"
	// SegmentsInverseTable is the table name for the Segment entity.
	// It exists in this package in order to avoid circular dependency with the "segment" package.
	SegmentsInverseTable = "segments"
	// SegmentsColumn is the table column denoting the segments relation/edge.
	SegmentsColumn = "session_segments"
)

// Columns holds all SQL columns for session fields.
var Columns = []string{
	FieldID,
	FieldAudio,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// AudioValidator is a validator for the "audio" field. It is called by the builders before save.
	AudioValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(string) error
)
